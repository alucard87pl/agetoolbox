name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: windows
            arch: x64
          - os: macos-latest
            platform: macos
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install frontend dependencies
      run: |
        cd src/frontend
        npm install

    - name: Build frontend
      run: |
        cd src/frontend
        npm run build

    - name: Install PyInstaller
      run: |
        pip install pyinstaller

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python scripts/build.py
      shell: cmd

    - name: Build executable (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        python scripts/build.py

    - name: Upload Windows artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: AGE_Toolbox-Windows-x64
        path: dist/AGE_Toolbox.exe

    - name: Upload macOS artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: AGE_Toolbox-macOS-x64
        path: dist/AGE_Toolbox

    - name: Upload Linux artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: AGE_Toolbox-Linux-x64
        path: dist/AGE_Toolbox

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: AGE_Toolbox-Windows-x64
        path: ./dist

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: AGE_Toolbox-macOS-x64
        path: ./dist

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: AGE_Toolbox-Linux-x64
        path: ./dist

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/AGE_Toolbox.exe
          dist/AGE_Toolbox
        body: |
          ## AGE Toolbox ${{ github.ref_name }}
          
          ### Downloads:
          - **Windows**: AGE_Toolbox.exe
          - **macOS**: AGE_Toolbox (may need to allow in Security & Privacy)
          - **Linux**: AGE_Toolbox
          
          ### Features:
          - üé≤ Dice Roller with 3d6 + bonus/penalty
          - ‚öîÔ∏è Stunts Reference with filtering
          - üìä Excel-based stunt management
          - üñ•Ô∏è Cross-platform desktop application
          
          ### Installation:
          1. Download the appropriate file for your platform
          2. Run the executable
          3. No additional installation required!
          
          ### Requirements:
          - Windows 10+, macOS 10.14+, or Linux
          - No additional dependencies needed
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

